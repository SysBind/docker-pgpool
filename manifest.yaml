---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pgpool


---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pgpool-patch
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - patch


---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pgpool-view
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pgpool
subjects:
  - kind: ServiceAccount
    name: pgpool
    namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pgpool
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: pgpool
    namespace: default


---
kind: Service
apiVersion: v1
metadata:
  name: pgsql-primary
spec:
  selector:
    pgsql-role: primary
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
kind: Service
apiVersion: v1
metadata:
  name: pgpool
spec:
  selector:
    pgpool-role: active
  ports:
    - protocol: TCP
      port: 5433
      targetPort: 5433

---
kind: Service
apiVersion: v1
metadata:
  name: postgres
spec:
  ports:
    - name: pgsql
      protocol: TCP
      port: 5432
      targetPort: 5432
    - name: pcp
      protocol: TCP
      port: 9898
      targetPort: 9898
    - name: watchdog
      protocol: TCP
      port: 9000
      targetPort: 9000
  clusterIP: None
  selector:
    app: postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: pgpool
      initContainers:
      - name: pginit
        image: sysbind/pgpool
        command: ["docker-entrypoint.sh"]
        args: ["pod-init"]
        volumeMounts:
          - name: initdb-scripts
            mountPath: /docker-entrypoint-initdb.d
          - name: data
            mountPath: /var/lib/postgresql/data

      containers:
      - name: pgsql
        image: postgres:11-alpine
        ports:
          - containerPort: 5432
            name: pgsql
        volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
          - name: initdb-scripts
            mountPath: /docker-entrypoint-initdb.d
        env:
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
      - name: pgpool
        image: sysbind/pgpool
        volumeMounts:
          - name: initdb-scripts
            mountPath: /docker-entrypoint-initdb.d
        ports:
          - containerPort: 5433
            name: pgpool
          - containerPort: 9898
            name: pcp
          - containerPort: 9000
            name: watchdog
      volumes:
      - name: initdb-scripts
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        volume.alpha.kubernetes.io/storage-class: standard
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 512Mi
